#数据库配置
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/xt?useUnicode=true&characterEncoding=utf-8&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=yxym

#redis配置
spring.redis.host=localhost
spring.redis.port=6379

#rocketmq配置
rocketmq.name-server=192.168.200.100:9876
rocketmq.producer.group=xt_web_group

invite.url=http://www.mszlu.com/api/i/u/

nacos.server-address=127.0.0.1
nacos.port=8848
nacos.username=nacos
nacos.password=nacos

dubbo.scan.base-packages=com.coding.xt.web.
dubbo.registry.group=xt_dubbo
dubbo.registry.address=nacos://${nacos.server-address}:${nacos.port}/?username=${nacos.username}&password=${nacos.password}
dubbo.consumer.check=false

#shardingjdbc的配置
#读写分离
##shardingsphere配置

spring.shardingsphere.datasource.common.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.common.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.common.username=root
spring.shardingsphere.datasource.common.password= yxym

## 一主2从
spring.shardingsphere.datasource.names=master,slave0,slave1

# 配置第 1 个数据源
spring.shardingsphere.datasource.master.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.master.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.master.jdbc-url=jdbc:mysql://localhost:3306/xt?useUnicode=true&characterEncoding=UTF-8&serverTimezone=UTC
spring.shardingsphere.datasource.master.username=root
spring.shardingsphere.datasource.master.password=yxym

# 配置第 2 个数据源
spring.shardingsphere.datasource.slave0.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.slave0.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.slave0.jdbc-url=jdbc:mysql://localhost:3306/xt?useUnicode=true&characterEncoding=UTF-8&serverTimezone=UTC
spring.shardingsphere.datasource.slave0.username=root
spring.shardingsphere.datasource.slave0.password=yxym
# 配置第 3 个数据源
spring.shardingsphere.datasource.slave1.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.slave1.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.slave1.jdbc-url=jdbc:mysql://localhost:3306/xt?useUnicode=true&characterEncoding=UTF-8&serverTimezone=UTC
spring.shardingsphere.datasource.slave1.username=root
spring.shardingsphere.datasource.slave1.password=yxym

# 写数据源名称
spring.shardingsphere.rules.readwrite-splitting.data-sources.ms.write-data-source-name=master
# 读数据源名称，多个从数据源用逗号分隔
spring.shardingsphere.rules.readwrite-splitting.data-sources.ms.read-data-source-names=slave0,slave1 
# 负载均衡算法名称
spring.shardingsphere.rules.readwrite-splitting.data-sources.ms.load-balancer-name=round-robin

## 负载均衡算法配置
spring.shardingsphere.rules.readwrite-splitting.load-balancers.round-robin.type=ROUND_ROBIN
## 负载均衡算法属性配置
spring.shardingsphere.rules.readwrite-splitting.load-balancers.round-robin.props.workId=1
#打印sql
spring.shardingsphere.props.sql-show=true
#分表配置
# 配置 t_user_practice 表规则
spring.shardingsphere.rules.sharding.tables.t_user_practice.actual-data-nodes=master.t_user_practice_$->{0..9}

# 配置分表策略
spring.shardingsphere.rules.sharding.tables.t_user_practice.table-strategy.standard.sharding-column=user_id
spring.shardingsphere.rules.sharding.tables.t_user_practice.table-strategy.standard.sharding-algorithm-name=table-inline


# 配置 分片算法
spring.shardingsphere.rules.sharding.sharding-algorithms.table-inline.type=INLINE
spring.shardingsphere.rules.sharding.sharding-algorithms.table-inline.props.algorithm-expression=t_user_practice_$->{user_id % 10}


# 微信支付相关配置
wx.pay.appId=123
wx.open.config.pay.secret=123
wx.pay.mchId=123
wx.pay.mchKey=123
wx.notify.url=http://www.mszlu.com/api/order/notify
